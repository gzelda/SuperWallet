<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.superwallet.dao.userBasicMapper" >
  <resultMap id="BaseResultMap" type="com.superwallet.model.userBasic" >
    <id column="UID" property="uid" jdbcType="CHAR" />
    <result column="nackName" property="nackName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="isAgency" property="isAgency" jdbcType="TINYINT" />
    <result column="phoneNumber" property="phoneNumber" jdbcType="CHAR" />
    <result column="inviter" property="inviter" jdbcType="CHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="invitedPeople" property="invitedPeople" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.superwallet.model.userBasic" extends="BaseResultMap" >
    <result column="headPhoto" property="headPhoto" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Base_Column_List" >
    UID, nackName, sex, isAgency, phoneNumber, inviter, status, invitedPeople
  </sql>
  <sql id="Blob_Column_List" >
    headPhoto
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from userBasic
    where UID = #{uid,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from userBasic
    where UID = #{uid,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.superwallet.model.userBasic" >
    insert into userBasic (UID, nackName, sex, 
      isAgency, phoneNumber, inviter, 
      status, invitedPeople, headPhoto
      )
    values (#{uid,jdbcType=CHAR}, #{nackName,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT},
      #{isAgency,jdbcType=TINYINT}, #{phoneNumber,jdbcType=CHAR}, #{inviter,jdbcType=CHAR},
      #{status,jdbcType=TINYINT}, #{invitedPeople,jdbcType=CHAR}, #{headPhoto,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.superwallet.model.userBasic" >
    insert into userBasic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        UID,
      </if>
      <if test="nackName != null" >
        nackName,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="isAgency != null" >
        isAgency,
      </if>
      <if test="phoneNumber != null" >
        phoneNumber,
      </if>
      <if test="inviter != null" >
        inviter,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="invitedPeople != null" >
        invitedPeople,
      </if>
      <if test="headPhoto != null" >
        headPhoto,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=CHAR},
      </if>
      <if test="nackName != null" >
        #{nackName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="isAgency != null" >
        #{isAgency,jdbcType=TINYINT},
      </if>
      <if test="phoneNumber != null" >
        #{phoneNumber,jdbcType=CHAR},
      </if>
      <if test="inviter != null" >
        #{inviter,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="invitedPeople != null" >
        #{invitedPeople,jdbcType=CHAR},
      </if>
      <if test="headPhoto != null" >
        #{headPhoto,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.superwallet.model.userBasic" >
    update userBasic
    <set >
      <if test="nackName != null" >
        nackName = #{nackname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="isAgency != null" >
        isAgency = #{isAgency,jdbcType=TINYINT},
      </if>
      <if test="phoneNumber != null" >
        phoneNumber = #{phoneNumber,jdbcType=CHAR},
      </if>
      <if test="inviter != null" >
        inviter = #{inviter,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="invitedPeople != null" >
        invitedPeople = #{invitedPeople,jdbcType=CHAR},
      </if>
      <if test="headPhoto != null" >
        headPhoto = #{headPhoto,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where UID = #{uid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.superwallet.model.userBasic" >
    update userBasic
    set nackName = #{nackName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      isAgency = #{isAgency,jdbcType=TINYINT},
      phoneNumber = #{phoneNumber,jdbcType=CHAR},
      inviter = #{inviter,jdbcType=CHAR},
      status = #{status,jdbcType=TINYINT},
      invitedPeople = #{invitedPeople,jdbcType=CHAR},
      headPhoto = #{headPhoto,jdbcType=LONGVARBINARY}
    where UID = #{uid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.superwallet.model.userBasic" >
    update userBasic
    set nackName = #{nackName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      isAgency = #{isAgency,jdbcType=TINYINT},
      phoneNumber = #{phoneNumber,jdbcType=CHAR},
      inviter = #{inviter,jdbcType=CHAR},
      status = #{status,jdbcType=TINYINT},
      invitedPeople = #{invitedPeople,jdbcType=CHAR}
    where UID = #{uid,jdbcType=CHAR}
  </update>
</mapper>