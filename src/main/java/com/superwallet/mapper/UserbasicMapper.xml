<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.UserbasicMapper">
    <resultMap id="BaseResultMap" type="pojo.Userbasic">
        <id column="UID" property="uid" jdbcType="CHAR"/>
        <result column="nickName" property="nickname" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="TINYINT"/>
        <result column="isAgency" property="isagency" jdbcType="TINYINT"/>
        <result column="phoneNumber" property="phonenumber" jdbcType="CHAR"/>
        <result column="inviter" property="inviter" jdbcType="CHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="passWord" property="password" jdbcType="VARCHAR"/>
        <result column="payPassWord" property="paypassword" jdbcType="VARCHAR"/>
        <result column="invitedCode" property="invitedcode" jdbcType="VARCHAR"/>
        <result column="invitedPeople" property="invitedpeople" jdbcType="VARCHAR"/>
        <result column="registerTime" property="registertime" jdbcType="TIMESTAMP"/>
  </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="pojo.Userbasic" extends="BaseResultMap">
        <result column="headPhoto" property="headphoto" jdbcType="LONGVARBINARY"/>
  </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                                <when test="criterion.listValue">
                  and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                                <when test="criterion.listValue">
                  and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
    <sql id="Base_Column_List">
    UID, nickName, sex, isAgency, phoneNumber, inviter, status, passWord, payPassWord, 
    invitedCode, invitedPeople, registerTime
  </sql>
    <sql id="Blob_Column_List">
    headPhoto
  </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="pojo.UserbasicExample">
    select
        <if test="distinct">
      distinct
    </if>
        <include refid="Base_Column_List"/>
    ,
        <include refid="Blob_Column_List"/>
    from userbasic
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
    </if>
        <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="pojo.UserbasicExample">
    select
        <if test="distinct">
      distinct
    </if>
        <include refid="Base_Column_List"/>
    from userbasic
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
    </if>
        <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
    ,
        <include refid="Blob_Column_List"/>
    from userbasic
    where UID = #{uid,jdbcType=CHAR}
  </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from userbasic
    where UID = #{uid,jdbcType=CHAR}
  </delete>
    <delete id="deleteByExample" parameterType="pojo.UserbasicExample">
    delete from userbasic
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
    </if>
  </delete>
    <insert id="insert" parameterType="pojo.Userbasic">
    insert into userbasic (UID, nickName, sex, 
      isAgency, phoneNumber, inviter, 
      status, passWord, payPassWord, 
      invitedCode, invitedPeople, registerTime, 
      headPhoto)
    values (#{uid,jdbcType=CHAR}, #{nickname,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, 
      #{isagency,jdbcType=TINYINT}, #{phonenumber,jdbcType=CHAR}, #{inviter,jdbcType=CHAR}, 
      #{status,jdbcType=TINYINT}, #{password,jdbcType=VARCHAR}, #{paypassword,jdbcType=VARCHAR}, 
      #{invitedcode,jdbcType=VARCHAR}, #{invitedpeople,jdbcType=VARCHAR}, #{registertime,jdbcType=TIMESTAMP}, 
      #{headphoto,jdbcType=LONGVARBINARY})
  </insert>
    <insert id="insertSelective" parameterType="pojo.Userbasic">
    insert into userbasic
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
        UID,
      </if>
            <if test="nickname != null">
        nickName,
      </if>
            <if test="sex != null">
        sex,
      </if>
            <if test="isagency != null">
        isAgency,
      </if>
            <if test="phonenumber != null">
        phoneNumber,
      </if>
            <if test="inviter != null">
        inviter,
      </if>
            <if test="status != null">
        status,
      </if>
            <if test="password != null">
        passWord,
      </if>
            <if test="paypassword != null">
        payPassWord,
      </if>
            <if test="invitedcode != null">
        invitedCode,
      </if>
            <if test="invitedpeople != null">
        invitedPeople,
            </if>
            <if test="registertime != null">
                registerTime,
            </if>
            <if test="headphoto != null">
        headPhoto,
      </if>
    </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
        #{uid,jdbcType=CHAR},
      </if>
            <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
            <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
            <if test="isagency != null">
        #{isagency,jdbcType=TINYINT},
      </if>
            <if test="phonenumber != null">
        #{phonenumber,jdbcType=CHAR},
      </if>
            <if test="inviter != null">
        #{inviter,jdbcType=CHAR},
      </if>
            <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
            <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
            <if test="paypassword != null">
        #{paypassword,jdbcType=VARCHAR},
      </if>
            <if test="invitedcode != null">
        #{invitedcode,jdbcType=VARCHAR},
      </if>
            <if test="invitedpeople != null">
        #{invitedpeople,jdbcType=VARCHAR},
      </if>
            <if test="registertime != null">
                #{registertime,jdbcType=TIMESTAMP},
            </if>
            <if test="headphoto != null">
        #{headphoto,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
    <select id="countByExample" parameterType="pojo.UserbasicExample" resultType="java.lang.Integer">
    select count(*) from userbasic
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
    </if>
  </select>
    <update id="updateByExampleSelective" parameterType="map">
    update userbasic
        <set>
            <if test="record.uid != null">
        UID = #{record.uid,jdbcType=CHAR},
      </if>
            <if test="record.nickname != null">
        nickName = #{record.nickname,jdbcType=VARCHAR},
      </if>
            <if test="record.sex != null">
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
            <if test="record.isagency != null">
        isAgency = #{record.isagency,jdbcType=TINYINT},
      </if>
            <if test="record.phonenumber != null">
        phoneNumber = #{record.phonenumber,jdbcType=CHAR},
      </if>
            <if test="record.inviter != null">
        inviter = #{record.inviter,jdbcType=CHAR},
      </if>
            <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
            <if test="record.password != null">
        passWord = #{record.password,jdbcType=VARCHAR},
      </if>
            <if test="record.paypassword != null">
        payPassWord = #{record.paypassword,jdbcType=VARCHAR},
      </if>
            <if test="record.invitedcode != null">
        invitedCode = #{record.invitedcode,jdbcType=VARCHAR},
      </if>
            <if test="record.invitedpeople != null">
        invitedPeople = #{record.invitedpeople,jdbcType=VARCHAR},
            </if>
            <if test="record.registertime != null">
                registerTime = #{record.registertime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.headphoto != null">
        headPhoto = #{record.headphoto,jdbcType=LONGVARBINARY},
      </if>
    </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
    update userbasic
    set UID = #{record.uid,jdbcType=CHAR},
        nickName = #{record.nickname,jdbcType=VARCHAR},
        sex = #{record.sex,jdbcType=TINYINT},
        isAgency = #{record.isagency,jdbcType=TINYINT},
        phoneNumber = #{record.phonenumber,jdbcType=CHAR},
        inviter = #{record.inviter,jdbcType=CHAR},
        status = #{record.status,jdbcType=TINYINT},
        passWord = #{record.password,jdbcType=VARCHAR},
        payPassWord = #{record.paypassword,jdbcType=VARCHAR},
        invitedCode = #{record.invitedcode,jdbcType=VARCHAR},
        invitedPeople = #{record.invitedpeople,jdbcType=VARCHAR},
        registerTime = #{record.registertime,jdbcType=TIMESTAMP},
        headPhoto = #{record.headphoto,jdbcType=LONGVARBINARY}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
    <update id="updateByExample" parameterType="map">
    update userbasic
    set UID = #{record.uid,jdbcType=CHAR},
        nickName = #{record.nickname,jdbcType=VARCHAR},
        sex = #{record.sex,jdbcType=TINYINT},
        isAgency = #{record.isagency,jdbcType=TINYINT},
        phoneNumber = #{record.phonenumber,jdbcType=CHAR},
        inviter = #{record.inviter,jdbcType=CHAR},
        status = #{record.status,jdbcType=TINYINT},
        passWord = #{record.password,jdbcType=VARCHAR},
        payPassWord = #{record.paypassword,jdbcType=VARCHAR},
        invitedCode = #{record.invitedcode,jdbcType=VARCHAR},
        invitedPeople = #{record.invitedpeople,jdbcType=VARCHAR},
        registerTime = #{record.registertime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
    <update id="updateByPrimaryKeySelective" parameterType="pojo.Userbasic">
    update userbasic
        <set>
            <if test="nickname != null">
        nickName = #{nickname,jdbcType=VARCHAR},
      </if>
            <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
            <if test="isagency != null">
        isAgency = #{isagency,jdbcType=TINYINT},
      </if>
            <if test="phonenumber != null">
        phoneNumber = #{phonenumber,jdbcType=CHAR},
      </if>
            <if test="inviter != null">
        inviter = #{inviter,jdbcType=CHAR},
      </if>
            <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
            <if test="password != null">
        passWord = #{password,jdbcType=VARCHAR},
      </if>
            <if test="paypassword != null">
        payPassWord = #{paypassword,jdbcType=VARCHAR},
      </if>
            <if test="invitedcode != null">
        invitedCode = #{invitedcode,jdbcType=VARCHAR},
      </if>
            <if test="invitedpeople != null">
        invitedPeople = #{invitedpeople,jdbcType=VARCHAR},
      </if>
            <if test="registertime != null">
                registerTime = #{registertime,jdbcType=TIMESTAMP},
            </if>
            <if test="headphoto != null">
        headPhoto = #{headphoto,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where UID = #{uid,jdbcType=CHAR}
  </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="pojo.Userbasic">
    update userbasic
    set nickName = #{nickname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      isAgency = #{isagency,jdbcType=TINYINT},
      phoneNumber = #{phonenumber,jdbcType=CHAR},
      inviter = #{inviter,jdbcType=CHAR},
      status = #{status,jdbcType=TINYINT},
      passWord = #{password,jdbcType=VARCHAR},
      payPassWord = #{paypassword,jdbcType=VARCHAR},
      invitedCode = #{invitedcode,jdbcType=VARCHAR},
      invitedPeople = #{invitedpeople,jdbcType=VARCHAR},
      registerTime = #{registertime,jdbcType=TIMESTAMP},
      headPhoto = #{headphoto,jdbcType=LONGVARBINARY}
    where UID = #{uid,jdbcType=CHAR}
  </update>
    <update id="updateByPrimaryKey" parameterType="pojo.Userbasic">
    update userbasic
    set nickName = #{nickname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      isAgency = #{isagency,jdbcType=TINYINT},
      phoneNumber = #{phonenumber,jdbcType=CHAR},
      inviter = #{inviter,jdbcType=CHAR},
      status = #{status,jdbcType=TINYINT},
      passWord = #{password,jdbcType=VARCHAR},
      payPassWord = #{paypassword,jdbcType=VARCHAR},
      invitedCode = #{invitedcode,jdbcType=VARCHAR},
      invitedPeople = #{invitedpeople,jdbcType=VARCHAR},
      registerTime = #{registertime,jdbcType=TIMESTAMP}
    where UID = #{uid,jdbcType=CHAR}
  </update>
</mapper>