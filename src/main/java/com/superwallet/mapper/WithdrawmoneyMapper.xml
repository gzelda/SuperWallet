<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.WithdrawmoneyMapper">
    <resultMap id="BaseResultMap" type="pojo.Withdrawmoney">
        <id column="UID" property="uid" jdbcType="CHAR"/>
        <id column="WID" property="wid" jdbcType="CHAR"/>
        <result column="tokenType" property="tokentype" jdbcType="TINYINT"/>
        <result column="amount" property="amount" jdbcType="DOUBLE"/>
        <result column="createdTime" property="createdtime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="auditor" property="auditor" jdbcType="VARCHAR"/>
        <result column="auditTime" property="audittime" jdbcType="TIMESTAMP"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    UID, WID, tokenType, amount, createdTime, status, auditor, auditTime, remark
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="pojo.WithdrawmoneyExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from withdrawmoney
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="pojo.WithdrawmoneyKey">
        select
        <include refid="Base_Column_List"/>
        from withdrawmoney
        where UID = #{uid,jdbcType=CHAR}
        and WID = #{wid,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="pojo.WithdrawmoneyKey">
    delete from withdrawmoney
    where UID = #{uid,jdbcType=CHAR}
      and WID = #{wid,jdbcType=CHAR}
  </delete>
    <delete id="deleteByExample" parameterType="pojo.WithdrawmoneyExample">
        delete from withdrawmoney
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="pojo.Withdrawmoney">
    insert into withdrawmoney (UID, WID, tokenType, 
      amount, createdTime, status, 
      auditor, auditTime, remark
      )
    values (#{uid,jdbcType=CHAR}, #{wid,jdbcType=CHAR}, #{tokentype,jdbcType=TINYINT}, 
      #{amount,jdbcType=DOUBLE}, #{createdtime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{auditor,jdbcType=VARCHAR}, #{audittime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="pojo.Withdrawmoney">
        insert into withdrawmoney
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                UID,
            </if>
            <if test="wid != null">
                WID,
            </if>
            <if test="tokentype != null">
                tokenType,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="createdtime != null">
                createdTime,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="auditor != null">
                auditor,
            </if>
            <if test="audittime != null">
                auditTime,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=CHAR},
            </if>
            <if test="wid != null">
                #{wid,jdbcType=CHAR},
            </if>
            <if test="tokentype != null">
                #{tokentype,jdbcType=TINYINT},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DOUBLE},
            </if>
            <if test="createdtime != null">
                #{createdtime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="auditor != null">
                #{auditor,jdbcType=VARCHAR},
            </if>
            <if test="audittime != null">
                #{audittime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="pojo.WithdrawmoneyExample" resultType="java.lang.Integer">
        select count(*) from withdrawmoney
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update withdrawmoney
        <set>
            <if test="record.uid != null">
                UID = #{record.uid,jdbcType=CHAR},
            </if>
            <if test="record.wid != null">
                WID = #{record.wid,jdbcType=CHAR},
            </if>
            <if test="record.tokentype != null">
                tokenType = #{record.tokentype,jdbcType=TINYINT},
            </if>
            <if test="record.amount != null">
                amount = #{record.amount,jdbcType=DOUBLE},
            </if>
            <if test="record.createdtime != null">
                createdTime = #{record.createdtime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.auditor != null">
                auditor = #{record.auditor,jdbcType=VARCHAR},
            </if>
            <if test="record.audittime != null">
                auditTime = #{record.audittime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update withdrawmoney
        set UID = #{record.uid,jdbcType=CHAR},
        WID = #{record.wid,jdbcType=CHAR},
        tokenType = #{record.tokentype,jdbcType=TINYINT},
        amount = #{record.amount,jdbcType=DOUBLE},
        createdTime = #{record.createdtime,jdbcType=TIMESTAMP},
        status = #{record.status,jdbcType=TINYINT},
        auditor = #{record.auditor,jdbcType=VARCHAR},
        auditTime = #{record.audittime,jdbcType=TIMESTAMP},
        remark = #{record.remark,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="pojo.Withdrawmoney">
        update withdrawmoney
        <set>
            <if test="tokentype != null">
                tokenType = #{tokentype,jdbcType=TINYINT},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=DOUBLE},
            </if>
            <if test="createdtime != null">
                createdTime = #{createdtime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="auditor != null">
                auditor = #{auditor,jdbcType=VARCHAR},
            </if>
            <if test="audittime != null">
                auditTime = #{audittime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where UID = #{uid,jdbcType=CHAR}
        and WID = #{wid,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="pojo.Withdrawmoney">
    update withdrawmoney
    set tokenType = #{tokentype,jdbcType=TINYINT},
      amount = #{amount,jdbcType=DOUBLE},
      createdTime = #{createdtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      auditor = #{auditor,jdbcType=VARCHAR},
      auditTime = #{audittime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where UID = #{uid,jdbcType=CHAR}
      and WID = #{wid,jdbcType=CHAR}
  </update>
</mapper>